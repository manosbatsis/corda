package net.corda.node.services.api

import net.corda.core.identity.PartyAndCertificate
import net.corda.core.node.services.IdentityService
import java.security.InvalidAlgorithmParameterException
import java.security.cert.CertificateExpiredException
import java.security.cert.CertificateNotYetValidException

interface IdentityServiceInternal : IdentityService {
    /**
     * Registered new confidential identity certificate randomly generated by us.
     */
    @Throws(CertificateExpiredException::class, CertificateNotYetValidException::class, InvalidAlgorithmParameterException::class)
    fun verifyAndRegisterNewRandomIdentity(identity: PartyAndCertificate)

    /**
     * Register legal identity from NodeInfo. This identity will be available from lookups by X500 name.
     */
    @Throws(CertificateExpiredException::class, CertificateNotYetValidException::class, InvalidAlgorithmParameterException::class)
    fun verifyAndRegisterNodeInfoIdentity(identity: PartyAndCertificate)
}